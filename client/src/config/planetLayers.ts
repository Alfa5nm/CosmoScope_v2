export type PlanetId = 'earth' | 'mars' | 'moon'

export type LayerId = string

export type LayerCategory =
  | 'basemap'
  | 'elevation'
  | 'night'
  | 'analysis'
  | 'partner'
  | 'science'
  | 'terrain'

export type PlanetLayerConfig = {
  id: LayerId
  name: string
  description: string
  supportsTime: boolean
  minZoom: number
  maxZoom: number
  category: LayerCategory
  metadata?: {
    provider?: string
    sourceUrl?: string
    citation?: string
    spatialResolution?: string
    temporalCoverage?: string
    tags?: string[]
    notes?: string
  }
  legendTitle?: string
  legendDescription?: string
  legendUrl?: string
  // Server-side metadata
  serverType?: 'gibs' | 'arcgis-image' | 'iiif'
  serverLayer?: string
  serverEndpoint?: string
  tileMatrixSet?: string
  format?: string
  defaultTime?: string
}

const catalog: Record<PlanetId, PlanetConfig> = {















  earth: {















    defaultLayer: 'base',















    layers: [















      {















        id: 'base',















        name: 'Blue Marble',















        description: 'Natural color imagery',















        supportsTime: true,















        minZoom: 0,















        maxZoom: 8,















        serverType: 'gibs',















        serverLayer: 'MODIS_Terra_CorrectedReflectance_TrueColor',















        tileMatrixSet: 'EPSG4326_250m',















        format: 'jpeg'















      },















      {















        id: 'thermal',















        name: 'Thermal',















        description: 'Surface temperature',















        supportsTime: true,















        minZoom: 0,















        maxZoom: 5,















        serverType: 'gibs',















        serverLayer: 'AIRS_L3_Surface_Air_Temperature_Daily_Day',















        tileMatrixSet: 'EPSG4326_2km',















        format: 'png',















        defaultTime: '2021-02-01'















      },















      {















        id: 'elevation',















        name: 'Elevation',















        description: 'Shaded terrain relief',















        supportsTime: false,















        minZoom: 0,















        maxZoom: 11,















        serverType: 'gibs',















        serverLayer: 'SRTM_Color_Index',















        tileMatrixSet: 'EPSG4326_500m',















        format: 'png'















      },















      {















        id: 'night',















        name: 'Night Lights',















        description: 'City lights at night',















        supportsTime: false,















        minZoom: 0,















        maxZoom: 7,















        serverType: 'gibs',















        serverLayer: 'VIIRS_CityLights_2012',















        tileMatrixSet: 'EPSG4326_500m',















        format: 'jpeg',















        defaultTime: '2012-01-01'















      }















    ]















  },















  mars: {















    defaultLayer: 'base',















    layers: [















      {















        id: 'base',















        name: 'CTX Mosaic',















        description: 'Mars surface mosaic',















        supportsTime: false,















        minZoom: 0,















        maxZoom: 9,















        serverType: 'arcgis-image',















        serverEndpoint: 'https://trek.nasa.gov/mars/trekarcgis/rest/services/Mars_Viking_MDIM21_ClrMosaic_global_232m/ImageServer',















        format: 'PNG'















      },















      {















        id: 'thermal',















        name: 'MOLA Colorized',















        description: 'Altimetry-based shading',















        supportsTime: false,















        minZoom: 0,















        maxZoom: 8,















        serverType: 'arcgis-image',















        serverEndpoint: 'https://trek.nasa.gov/mars/trekarcgis/rest/services/Mars_MGS_MOLA_Colorized_DEM_Global_463m/ImageServer',















        format: 'PNG'















      },















      {















        id: 'elevation',















        name: 'Elevation',















        description: 'Global elevation model',















        supportsTime: false,















        minZoom: 0,















        maxZoom: 9,















        serverType: 'arcgis-image',















        serverEndpoint: 'https://trek.nasa.gov/mars/trekarcgis/rest/services/mola128_mola64_merge_90Nto90S_SimpleC_clon0/ImageServer',















        format: 'PNG32'















      },















      {















        id: 'night',















        name: 'Topography',















        description: 'Alternate shaded relief',















        supportsTime: false,















        minZoom: 0,















        maxZoom: 8,















        serverType: 'arcgis-image',















        serverEndpoint: 'https://trek.nasa.gov/mars/trekarcgis/rest/services/Mars_MGS_MOLA_Colorized_DEM_Global_463m/ImageServer',















        format: 'PNG'















      }















    ]















  },















  moon: {















    defaultLayer: 'base',















    layers: [















      {















        id: 'base',















        name: 'LROC WAC',















        description: 'Global lunar imaging',















        supportsTime: false,















        minZoom: 0,















        maxZoom: 10,















        serverType: 'arcgis-image',















        serverEndpoint: 'https://trek.nasa.gov/moon/trekarcgis/rest/services/LRO_WAC_Mosaic_Global_303ppd_v02/ImageServer',















        format: 'PNG'















      },















      {















        id: 'elevation',















        name: 'Elevation',















        description: 'LOLA elevation model',















        supportsTime: false,















        minZoom: 0,















        maxZoom: 10,















        serverType: 'arcgis-image',















        serverEndpoint: 'https://trek.nasa.gov/moon/trekarcgis/rest/services/LRO_LOLA_DEM_Global_256ppd_v06/ImageServer',















        format: 'PNG32'















      }















    ]















  }















}















const DEFAULT_LIMITS = { min: 0, max: 8 }















export const getPlanetConfig = (planet: PlanetId): PlanetConfig => catalog[planet]















export const getLayerConfig = (planet: PlanetId, layerId: LayerId): PlanetLayerConfig | undefined =>















  catalog[planet]?.layers.find(layer => layer.id === layerId)















export const getLayerList = (planet: PlanetId): PlanetLayerConfig[] => catalog[planet]?.layers ?? []















export const layerSupportsTime = (planet: PlanetId, layerId: LayerId): boolean =>















  Boolean(getLayerConfig(planet, layerId)?.supportsTime)















export const getLayerZoomLimits = (planet: PlanetId, layerId: LayerId) => {















  const layer = getLayerConfig(planet, layerId)















  return layer ? { min: layer.minZoom, max: layer.maxZoom } : { ...DEFAULT_LIMITS }















}















// Export the full catalog for server-side use















export const getFullCatalog = () => catalog















// Helper to get server configuration for a layer















export const getServerConfig = (planet: PlanetId, layerId: LayerId) => {















  const layer = getLayerConfig(planet, layerId)















  if (!layer) return null















  















  return {















    type: layer.serverType,















    layer: layer.serverLayer,















    endpoint: layer.serverEndpoint,















    tileMatrixSet: layer.tileMatrixSet,















    format: layer.format,















    defaultTime: layer.defaultTime,















    minZoom: layer.minZoom,















    maxZoom: layer.maxZoom,















    supportsTime: layer.supportsTime















  }















}